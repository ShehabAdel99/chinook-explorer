[metadata]
name = chinook-explorer
version = 1.0.0
author = ShehabAdel99
author_email = shehab.adel@tu-dortmund.de
description = A comprehensive Python package for analyzing and visualizing Chinook music store data
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/ShehabAdel99/chinook-explorer
project_urls =
    Bug Tracker = https://github.com/ShehabAdel99/chinook-explorer/issues
    Documentation = https://github.com/ShehabAdel99/chinook-explorer#readme
    Source = https://github.com/ShehabAdel99/chinook-explorer
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Education
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Scientific/Engineering :: Information Analysis
    Topic :: Office/Business :: Financial :: Spreadsheet
    Topic :: Software Development :: Libraries :: Python Modules
    Framework :: Jupyter
keywords = data-analysis, visualization, business-intelligence, music-store, chinook, analytics

[options]
package_dir =
    = src
packages = find:
python_requires = >=3.10
install_requires =
    pandas>=2.0.0
    numpy>=1.21.0
    matplotlib>=3.5.0
    seaborn>=0.12.0
    IPython>=8.0.0

[options.packages.find]
where = src
exclude =
    tests*

[options.extras_require]
dev =
    jupyter>=1.0.0
    pytest>=7.0.0
    pytest-cov>=4.0.0
    mypy>=1.0.0
    black>=22.0.0
    flake8>=6.0.0
test =
    pytest>=7.0.0
    pytest-cov>=4.0.0
jupyter =
    jupyter>=1.0.0
    ipykernel>=6.0.0

[bdist_wheel]
universal = 0

[flake8]
max-line-length = 100
extend-ignore = E203, E501, W503
exclude = 
    .git,
    __pycache__,
    .venv,
    .eggs,
    *.egg,
    build,
    dist

[coverage:run]
source = src/chinook_explorer
omit = 
    */tests/*
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod